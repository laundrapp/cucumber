//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber/cucumber-expressions/java/src/main/java/io/cucumber/cucumberexpressions/Transformer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoCucumberCucumberexpressionsTransformer")
#ifdef RESTRICT_IoCucumberCucumberexpressionsTransformer
#define INCLUDE_ALL_IoCucumberCucumberexpressionsTransformer 0
#else
#define INCLUDE_ALL_IoCucumberCucumberexpressionsTransformer 1
#endif
#undef RESTRICT_IoCucumberCucumberexpressionsTransformer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoCucumberCucumberexpressionsTransformer_) && (INCLUDE_ALL_IoCucumberCucumberexpressionsTransformer || defined(INCLUDE_IoCucumberCucumberexpressionsTransformer))
#define IoCucumberCucumberexpressionsTransformer_

/*!
 @brief Transformer for a @@<code>ParameterType</code> with zero or one capture groups.
 */
@protocol IoCucumberCucumberexpressionsTransformer < JavaObject >

/*!
 @brief Transforms a string into to an object.The string is either taken
  from the sole capture group or matches the whole expression.
 Nested
  capture groups are ignored. 
 <p>
  If the capture group is optional <code>arg</code> may be null.
 @param arg the value of the single capture group
 @return the transformed object
 @throw Throwableif transformation failed
 */
- (id)transformWithNSString:(NSString *)arg;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberCucumberexpressionsTransformer)

J2OBJC_TYPE_LITERAL_HEADER(IoCucumberCucumberexpressionsTransformer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoCucumberCucumberexpressionsTransformer")
