//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber/cucumber-expressions/java/src/main/java/io/cucumber/cucumberexpressions/RegularExpression.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoCucumberCucumberexpressionsRegularExpression")
#ifdef RESTRICT_IoCucumberCucumberexpressionsRegularExpression
#define INCLUDE_ALL_IoCucumberCucumberexpressionsRegularExpression 0
#else
#define INCLUDE_ALL_IoCucumberCucumberexpressionsRegularExpression 1
#endif
#undef RESTRICT_IoCucumberCucumberexpressionsRegularExpression

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoCucumberCucumberexpressionsRegularExpression_) && (INCLUDE_ALL_IoCucumberCucumberexpressionsRegularExpression || defined(INCLUDE_IoCucumberCucumberexpressionsRegularExpression))
#define IoCucumberCucumberexpressionsRegularExpression_

#define RESTRICT_IoCucumberCucumberexpressionsExpression 1
#define INCLUDE_IoCucumberCucumberexpressionsExpression 1
#include "io/cucumber/cucumberexpressions/Expression.h"

@class IoCucumberCucumberexpressionsParameterTypeRegistry;
@class JavaUtilRegexPattern;
@protocol JavaUtilList;

@interface IoCucumberCucumberexpressionsRegularExpression : NSObject < IoCucumberCucumberexpressionsExpression >

#pragma mark Public

/*!
 @brief Creates a new instance.Use this when the transform types are not known in advance,
  and should be determined by the regular expression's capture groups.
 Use this with
  dynamically typed languages.
 @param expressionRegexp the regular expression to use
 @param parameterTypeRegistry used to look up parameter types
 */
- (instancetype __nonnull)initWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)expressionRegexp
withIoCucumberCucumberexpressionsParameterTypeRegistry:(IoCucumberCucumberexpressionsParameterTypeRegistry *)parameterTypeRegistry;

- (JavaUtilRegexPattern *)getRegexp;

- (NSString *)getSource;

- (id<JavaUtilList>)matchWithNSString:(NSString *)text;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberCucumberexpressionsRegularExpression)

FOUNDATION_EXPORT void IoCucumberCucumberexpressionsRegularExpression_initWithJavaUtilRegexPattern_withIoCucumberCucumberexpressionsParameterTypeRegistry_(IoCucumberCucumberexpressionsRegularExpression *self, JavaUtilRegexPattern *expressionRegexp, IoCucumberCucumberexpressionsParameterTypeRegistry *parameterTypeRegistry);

FOUNDATION_EXPORT IoCucumberCucumberexpressionsRegularExpression *new_IoCucumberCucumberexpressionsRegularExpression_initWithJavaUtilRegexPattern_withIoCucumberCucumberexpressionsParameterTypeRegistry_(JavaUtilRegexPattern *expressionRegexp, IoCucumberCucumberexpressionsParameterTypeRegistry *parameterTypeRegistry) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoCucumberCucumberexpressionsRegularExpression *create_IoCucumberCucumberexpressionsRegularExpression_initWithJavaUtilRegexPattern_withIoCucumberCucumberexpressionsParameterTypeRegistry_(JavaUtilRegexPattern *expressionRegexp, IoCucumberCucumberexpressionsParameterTypeRegistry *parameterTypeRegistry);

J2OBJC_TYPE_LITERAL_HEADER(IoCucumberCucumberexpressionsRegularExpression)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoCucumberCucumberexpressionsRegularExpression")
