//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber/cucumber-expressions/java/src/main/java/io/cucumber/cucumberexpressions/CucumberExpressionGenerator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoCucumberCucumberexpressionsCucumberExpressionGenerator")
#ifdef RESTRICT_IoCucumberCucumberexpressionsCucumberExpressionGenerator
#define INCLUDE_ALL_IoCucumberCucumberexpressionsCucumberExpressionGenerator 0
#else
#define INCLUDE_ALL_IoCucumberCucumberexpressionsCucumberExpressionGenerator 1
#endif
#undef RESTRICT_IoCucumberCucumberexpressionsCucumberExpressionGenerator

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoCucumberCucumberexpressionsCucumberExpressionGenerator_) && (INCLUDE_ALL_IoCucumberCucumberexpressionsCucumberExpressionGenerator || defined(INCLUDE_IoCucumberCucumberexpressionsCucumberExpressionGenerator))
#define IoCucumberCucumberexpressionsCucumberExpressionGenerator_

@class IoCucumberCucumberexpressionsGeneratedExpression;
@class IoCucumberCucumberexpressionsParameterTypeRegistry;
@protocol JavaUtilList;

@interface IoCucumberCucumberexpressionsCucumberExpressionGenerator : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithIoCucumberCucumberexpressionsParameterTypeRegistry:(IoCucumberCucumberexpressionsParameterTypeRegistry *)parameterTypeRegistry;

/*!
 @param text the text (step) to generate an expression for
 @return the first of the generated expressions
 */
- (IoCucumberCucumberexpressionsGeneratedExpression *)generateExpressionWithNSString:(NSString *)text;

- (id<JavaUtilList>)generateExpressionsWithNSString:(NSString *)text;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberCucumberexpressionsCucumberExpressionGenerator)

FOUNDATION_EXPORT void IoCucumberCucumberexpressionsCucumberExpressionGenerator_initWithIoCucumberCucumberexpressionsParameterTypeRegistry_(IoCucumberCucumberexpressionsCucumberExpressionGenerator *self, IoCucumberCucumberexpressionsParameterTypeRegistry *parameterTypeRegistry);

FOUNDATION_EXPORT IoCucumberCucumberexpressionsCucumberExpressionGenerator *new_IoCucumberCucumberexpressionsCucumberExpressionGenerator_initWithIoCucumberCucumberexpressionsParameterTypeRegistry_(IoCucumberCucumberexpressionsParameterTypeRegistry *parameterTypeRegistry) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoCucumberCucumberexpressionsCucumberExpressionGenerator *create_IoCucumberCucumberexpressionsCucumberExpressionGenerator_initWithIoCucumberCucumberexpressionsParameterTypeRegistry_(IoCucumberCucumberexpressionsParameterTypeRegistry *parameterTypeRegistry);

J2OBJC_TYPE_LITERAL_HEADER(IoCucumberCucumberexpressionsCucumberExpressionGenerator)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoCucumberCucumberexpressionsCucumberExpressionGenerator")
