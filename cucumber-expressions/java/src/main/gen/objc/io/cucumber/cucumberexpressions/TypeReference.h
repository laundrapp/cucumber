//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber/cucumber-expressions/java/src/main/java/io/cucumber/cucumberexpressions/TypeReference.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoCucumberCucumberexpressionsTypeReference")
#ifdef RESTRICT_IoCucumberCucumberexpressionsTypeReference
#define INCLUDE_ALL_IoCucumberCucumberexpressionsTypeReference 0
#else
#define INCLUDE_ALL_IoCucumberCucumberexpressionsTypeReference 1
#endif
#undef RESTRICT_IoCucumberCucumberexpressionsTypeReference

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoCucumberCucumberexpressionsTypeReference_) && (INCLUDE_ALL_IoCucumberCucumberexpressionsTypeReference || defined(INCLUDE_IoCucumberCucumberexpressionsTypeReference))
#define IoCucumberCucumberexpressionsTypeReference_

@protocol JavaLangReflectType;

@interface IoCucumberCucumberexpressionsTypeReference : NSObject

#pragma mark Public

- (id<JavaLangReflectType>)getType;

#pragma mark Protected

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberCucumberexpressionsTypeReference)

FOUNDATION_EXPORT void IoCucumberCucumberexpressionsTypeReference_init(IoCucumberCucumberexpressionsTypeReference *self);

J2OBJC_TYPE_LITERAL_HEADER(IoCucumberCucumberexpressionsTypeReference)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoCucumberCucumberexpressionsTypeReference")
