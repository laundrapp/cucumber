//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber/cucumber-expressions/java/src/main/java/io/cucumber/cucumberexpressions/CucumberExpression.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoCucumberCucumberexpressionsCucumberExpression")
#ifdef RESTRICT_IoCucumberCucumberexpressionsCucumberExpression
#define INCLUDE_ALL_IoCucumberCucumberexpressionsCucumberExpression 0
#else
#define INCLUDE_ALL_IoCucumberCucumberexpressionsCucumberExpression 1
#endif
#undef RESTRICT_IoCucumberCucumberexpressionsCucumberExpression

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoCucumberCucumberexpressionsCucumberExpression_) && (INCLUDE_ALL_IoCucumberCucumberexpressionsCucumberExpression || defined(INCLUDE_IoCucumberCucumberexpressionsCucumberExpression))
#define IoCucumberCucumberexpressionsCucumberExpression_

#define RESTRICT_IoCucumberCucumberexpressionsExpression 1
#define INCLUDE_IoCucumberCucumberexpressionsExpression 1
#include "io/cucumber/cucumberexpressions/Expression.h"

@class IoCucumberCucumberexpressionsParameterTypeRegistry;
@class JavaUtilRegexPattern;
@protocol JavaUtilList;

@interface IoCucumberCucumberexpressionsCucumberExpression : NSObject < IoCucumberCucumberexpressionsExpression >

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)expression
withIoCucumberCucumberexpressionsParameterTypeRegistry:(IoCucumberCucumberexpressionsParameterTypeRegistry *)parameterTypeRegistry;

- (JavaUtilRegexPattern *)getRegexp;

- (NSString *)getSource;

- (id<JavaUtilList>)matchWithNSString:(NSString *)text;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(IoCucumberCucumberexpressionsCucumberExpression)

inline JavaUtilRegexPattern *IoCucumberCucumberexpressionsCucumberExpression_get_PARAMETER_PATTERN(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilRegexPattern *IoCucumberCucumberexpressionsCucumberExpression_PARAMETER_PATTERN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(IoCucumberCucumberexpressionsCucumberExpression, PARAMETER_PATTERN, JavaUtilRegexPattern *)

FOUNDATION_EXPORT void IoCucumberCucumberexpressionsCucumberExpression_initWithNSString_withIoCucumberCucumberexpressionsParameterTypeRegistry_(IoCucumberCucumberexpressionsCucumberExpression *self, NSString *expression, IoCucumberCucumberexpressionsParameterTypeRegistry *parameterTypeRegistry);

FOUNDATION_EXPORT IoCucumberCucumberexpressionsCucumberExpression *new_IoCucumberCucumberexpressionsCucumberExpression_initWithNSString_withIoCucumberCucumberexpressionsParameterTypeRegistry_(NSString *expression, IoCucumberCucumberexpressionsParameterTypeRegistry *parameterTypeRegistry) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoCucumberCucumberexpressionsCucumberExpression *create_IoCucumberCucumberexpressionsCucumberExpression_initWithNSString_withIoCucumberCucumberexpressionsParameterTypeRegistry_(NSString *expression, IoCucumberCucumberexpressionsParameterTypeRegistry *parameterTypeRegistry);

J2OBJC_TYPE_LITERAL_HEADER(IoCucumberCucumberexpressionsCucumberExpression)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoCucumberCucumberexpressionsCucumberExpression")
