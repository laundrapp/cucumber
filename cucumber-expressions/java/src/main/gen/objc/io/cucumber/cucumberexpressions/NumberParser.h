//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber/cucumber-expressions/java/src/main/java/io/cucumber/cucumberexpressions/NumberParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoCucumberCucumberexpressionsNumberParser")
#ifdef RESTRICT_IoCucumberCucumberexpressionsNumberParser
#define INCLUDE_ALL_IoCucumberCucumberexpressionsNumberParser 0
#else
#define INCLUDE_ALL_IoCucumberCucumberexpressionsNumberParser 1
#endif
#undef RESTRICT_IoCucumberCucumberexpressionsNumberParser

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoCucumberCucumberexpressionsNumberParser_) && (INCLUDE_ALL_IoCucumberCucumberexpressionsNumberParser || defined(INCLUDE_IoCucumberCucumberexpressionsNumberParser))
#define IoCucumberCucumberexpressionsNumberParser_

@class JavaTextNumberFormat;

@interface IoCucumberCucumberexpressionsNumberParser : NSObject

#pragma mark Package-Private

- (instancetype __nonnull)initWithJavaTextNumberFormat:(JavaTextNumberFormat *)numberFormat;

- (jdouble)parseDoubleWithNSString:(NSString *)s;

- (jfloat)parseFloatWithNSString:(NSString *)s;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(IoCucumberCucumberexpressionsNumberParser)

FOUNDATION_EXPORT void IoCucumberCucumberexpressionsNumberParser_initWithJavaTextNumberFormat_(IoCucumberCucumberexpressionsNumberParser *self, JavaTextNumberFormat *numberFormat);

FOUNDATION_EXPORT IoCucumberCucumberexpressionsNumberParser *new_IoCucumberCucumberexpressionsNumberParser_initWithJavaTextNumberFormat_(JavaTextNumberFormat *numberFormat) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoCucumberCucumberexpressionsNumberParser *create_IoCucumberCucumberexpressionsNumberParser_initWithJavaTextNumberFormat_(JavaTextNumberFormat *numberFormat);

J2OBJC_TYPE_LITERAL_HEADER(IoCucumberCucumberexpressionsNumberParser)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoCucumberCucumberexpressionsNumberParser")
