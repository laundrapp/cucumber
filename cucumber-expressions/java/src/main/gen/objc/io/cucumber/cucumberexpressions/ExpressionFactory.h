//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/cucumber/cucumber-expressions/java/src/main/java/io/cucumber/cucumberexpressions/ExpressionFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_IoCucumberCucumberexpressionsExpressionFactory")
#ifdef RESTRICT_IoCucumberCucumberexpressionsExpressionFactory
#define INCLUDE_ALL_IoCucumberCucumberexpressionsExpressionFactory 0
#else
#define INCLUDE_ALL_IoCucumberCucumberexpressionsExpressionFactory 1
#endif
#undef RESTRICT_IoCucumberCucumberexpressionsExpressionFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (IoCucumberCucumberexpressionsExpressionFactory_) && (INCLUDE_ALL_IoCucumberCucumberexpressionsExpressionFactory || defined(INCLUDE_IoCucumberCucumberexpressionsExpressionFactory))
#define IoCucumberCucumberexpressionsExpressionFactory_

@class IoCucumberCucumberexpressionsParameterTypeRegistry;
@protocol IoCucumberCucumberexpressionsExpression;

/*!
 @brief Creates a <code>CucumberExpression</code> or <code>RegularExpression</code> from a <code>String</code>
  using heuristics.This is particularly useful for languages that don't have a
  literal syntax for regular expressions such as Ruby or JavaScript - with Java
  a regular expression has to be represented as a String.
 */
@interface IoCucumberCucumberexpressionsExpressionFactory : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithIoCucumberCucumberexpressionsParameterTypeRegistry:(IoCucumberCucumberexpressionsParameterTypeRegistry *)parameterTypeRegistry;

- (id<IoCucumberCucumberexpressionsExpression>)createExpressionWithNSString:(NSString *)expressionString;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(IoCucumberCucumberexpressionsExpressionFactory)

FOUNDATION_EXPORT void IoCucumberCucumberexpressionsExpressionFactory_initWithIoCucumberCucumberexpressionsParameterTypeRegistry_(IoCucumberCucumberexpressionsExpressionFactory *self, IoCucumberCucumberexpressionsParameterTypeRegistry *parameterTypeRegistry);

FOUNDATION_EXPORT IoCucumberCucumberexpressionsExpressionFactory *new_IoCucumberCucumberexpressionsExpressionFactory_initWithIoCucumberCucumberexpressionsParameterTypeRegistry_(IoCucumberCucumberexpressionsParameterTypeRegistry *parameterTypeRegistry) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IoCucumberCucumberexpressionsExpressionFactory *create_IoCucumberCucumberexpressionsExpressionFactory_initWithIoCucumberCucumberexpressionsParameterTypeRegistry_(IoCucumberCucumberexpressionsParameterTypeRegistry *parameterTypeRegistry);

J2OBJC_TYPE_LITERAL_HEADER(IoCucumberCucumberexpressionsExpressionFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_IoCucumberCucumberexpressionsExpressionFactory")
